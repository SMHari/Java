//connect.javaa for connection
import java.sql.*;
import java.io.*;

public class Connect
{
	Connection con;
	Statement stat;
	ResultSet rs;
	public Connect()
	{
		try{
		Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
		con = DriverManager.getConnection("jdbc:odbc:OracleXE:1521:localhost","root","");
		stat = con.createStatement();
		}catch(Exception ex){System.out.println("COnnect class 1:" +ex);}
	}
	public Connection getConnect()
	{
		return con;
	}
	public ResultSet getRecords(String query)
	{
		try{
		ResultSet rs =stat.executeQuery(query);
		}catch(Exception ex){System.out.println("COnnect class 2:"+ ex);}
		return rs;
	}
	
}

//login.java

import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.border.*;

public class Login extends JFrame implements ActionListener
 { 
  	JLabel l1,l2,l3;
  	JTextField t1;
  	JPasswordField t2;
   	 JButton login;
	JComboBox cb;
	Connection con;
	PreparedStatement stat;
  	 public Login(String title)
  	 {
    	super(title);
    	Container content= getContentPane();
   	 content.setBackground(Color.pink);
    	setLayout(null);
	JLabel ban = new JLabel("User Login");
	ban.setFont(new Font("Times New Roman" ,Font.BOLD + Font.ITALIC,32));
	ban.setForeground(Color.blue);
	//ban.setBackground()
	//ban.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));
    	JPanel p1,p2,p3,p4,p5;
	
   	 p1=new JPanel();
   	p1.setBackground(Color.pink);
   	 p1.setLayout(new FlowLayout());
    	l1=new JLabel("User Category   ");
	String[] cmb ={"ASSISTANT ENGINEER     ", "SENIOR SUPERENTEND","SENIOR ASSISTANT","CASHIER"};
   	cb = new JComboBox(cmb);
   	p1.add(l1);
    	p1.add(cb);
    
    	p2=new JPanel();
    	p2.setBackground(Color.pink);
   	 p2.setLayout(new FlowLayout());
    	l2=new JLabel("User Name       ");
    	t1=new JTextField(15);
   	 p2.add(l2);
   	 p2.add(t1);

	 p3=new JPanel();
    	p3.setBackground(Color.pink);
    	p3.setLayout(new FlowLayout());
    	l3=new JLabel("Password         ");
    	t2=new JPasswordField(15);
   	 p3.add(l3);
    	p3.add(t2);
    
    
   	 p4=new JPanel();
   	p4.setBackground(Color.pink);
    	p4.setLayout(new FlowLayout());
    	login=new JButton(" LOGIN ",new ImageIcon("pictures/click.gif"));
     	p4.add(login);

    
    	p5=new JPanel();
	p5.setBackground(Color.pink);
    	p5.setLayout(new GridLayout(3,1));
	p5.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createLineBorder(new Color(0,0,0)),BorderFactory.createEmptyBorder(10,10,10,10)));
    	p5.add(p1);
	p5.add(p2);
    	p5.add(p3);
    		
	ban.setBounds(160,30,200,70);
	  p5.setBounds(80,125,320,130);
	 p4.setBounds(150,270,170,60);
	 add(p5); 
	 add(p4);
	add(ban);
	login.addActionListener(this);
	t1.requestFocus();
	try
		   {
			Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
			con = DriverManager.getConnection("jdbc:odbc:KSEB","sa","");
			
			
		
		   }catch(Exception ex)
			{}
  
  
    addWindowListener(new WindowAdapter()
      {
       public void windowClosing(WindowEvent ex)
         	{
 	  System.exit(0);
  	}
      });

}
	
	public void actionPerformed(ActionEvent e)
	{

		if(e.getSource()==login)
		{
			try{
			stat= con.prepareStatement("select password from users where username=?");
			stat.setString(1,t1.getText().trim());
			ResultSet rs = stat.executeQuery();
			if(rs.next())
			{
				String p = rs.getString(1);
				if(p.equals(t2.getText().trim()))
				{
					int selected = cb.getSelectedIndex();
					switch(selected)
					{

						case 0:
						case 1:
							System.out.println("Inside 1");
							SeniorManagerLogon ss = new SeniorManagerLogon("Administration");
							Toolkit tool = Toolkit.getDefaultToolkit();
							Dimension d = tool.getScreenSize();
							ss.setSize((int)d.getWidth(),(int)d.getHeight());
							//ss.setOpaque(true);
						
							ss.setBackground(Color.white);
							ss.setVisible(true);
							this.setVisible(false);
							break; 
						case 2:
						case 3:
					}
					
				}
				else
					{
					JOptionPane.showMessageDialog(this,"Invalid Password !","Error",JOptionPane.WARNING_MESSAGE); 
					t2.setText("");
					t2.requestFocus();
					}
			}else
			 {
				JOptionPane.showMessageDialog(this,"Invalid User !","Error",JOptionPane.WARNING_MESSAGE); 	
				t1.setText("");
				t1.requestFocus();
			}
			}catch(Exception ex)
			{
				//ta.append(ex.getMessage());

			}

		}
	}
	public static void main(String arg[])
  	{
    		Login log=new Login("User Logon");
       
     		log.setSize(500,400);
		log.setLocation(300,180);
     		log.setVisible(true);
  	}
}

     
//QueryData.java
import java.io.*;
import java.sql.*;
import java.util.*;
class QueryData
{
	Connection con;
	PreparedStatement stat;
	public QueryData()
	{	try{
		Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
		con=DriverManager.getConnection("jdbc:odbc:kseb","sa","");
		}catch(Exception ex){
					System.out.println("Error in QueryData" + ex);
				}
	}
	
	public Connection getConnect()
	{
		return con;
	}
	public Vector getConsumer()throws Exception
	{	
		stat = con.prepareStatement("select conno from consumer",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		ResultSet rs = stat.executeQuery();
		Vector v = new Vector();
		while(rs.next())
		{
			v.addElement(rs.getString(1));
		}
		return v;
		
		
	}
	public Vector getConsumerDetails(String id)throws Exception
	{
		stat = con.prepareStatement("select  * from consumer where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		stat.setString(1,id);
		ResultSet rs = stat.executeQuery();
		Vector v = new Vector();
		if(rs.next())
		{
			v.addElement(rs.getString(2));
			v.addElement(rs.getString(3));
			v.addElement(rs.getString(4));
			v.addElement(rs.getString(5));
			v.addElement(rs.getString(6));
			v.addElement(rs.getString(7));
			v.addElement(rs.getString(8));
			v.addElement(rs.getString(9));
			v.addElement(rs.getString(10));
		}
		return v;
	}

	public Vector getMeterDetails(String id)throws Exception
	{
		stat = con.prepareStatement("select  * from meterdetails where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		stat.setString(1,id);
		ResultSet rs = stat.executeQuery();
		Vector v2 = new Vector();
		if(rs.next())
		{
			v2.addElement(rs.getString(2));
			v2.addElement(rs.getString(3));
			v2.addElement(rs.getString(4));
			
		}
		return v2;
	}

	public Vector getDepositDetails(String id)throws Exception
	{
		stat = con.prepareStatement("select  * from depositdetails where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		stat.setString(1,id);
		ResultSet rs = stat.executeQuery();
		Vector v3 = new Vector();
		if(rs.next())
		{
			v3.addElement(rs.getString(2));
			v3.addElement(rs.getString(3));
			v3.addElement(rs.getString(4));
			v3.addElement(rs.getString(5));
			v3.addElement(rs.getString(6));
			v3.addElement(rs.getString(7));
			v3.addElement(rs.getString(8));
			v3.addElement(rs.getString(9));
			v3.addElement(rs.getString(10));
			v3.addElement(rs.getString(11));
			v3.addElement(rs.getString(12));
			v3.addElement(rs.getString(13));
			
			
		}
		return v3;
	}

	public Vector getMgDetails(String id)throws Exception
	{

		stat = con.prepareStatement("select  * from mg where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		stat.setString(1,id);
		ResultSet rs = stat.executeQuery();
		Vector v4 = new Vector();
		if(rs.next())
		{
			v4.addElement(rs.getString(2));
			v4.addElement(rs.getString(3));
			v4.addElement(rs.getString(4));
			v4.addElement(rs.getString(5));
			v4.addElement(rs.getString(6));
			v4.addElement(rs.getString(7));
			v4.addElement(rs.getString(8));
			
			
		}
		return v4;			
	}

	public Vector getAreaCode(String id)throws Exception
	{

		stat = con.prepareStatement("select  areacode,mrcode from consumer where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		
		stat.setString(1,id);
		
		ResultSet rs = stat.executeQuery();
		
		Vector v5 = new Vector();
		if(rs.next())
		{
			v5.addElement(rs.getString(1));
			v5.addElement(rs.getString(2));
			System.out.println(v5);
			
			
		}
		return v5;
	}

	public Vector getCons(String acode,String mcode)throws Exception
	{
		stat = con.prepareStatement("select  conno from consumer where areacode=? and mrcode=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		stat.setString(1,acode);
		stat.setString(2,mcode);
		System.out.println("Aracode   " + acode);
		System.out.println("Meter Code " + mcode);
		ResultSet rs = stat.executeQuery();
		Vector v6 = new Vector();
		while(rs.next())
		{
			v6.addElement(rs.getString(1));
			
		}
		return v6;
	}

	public Vector getBillDetails(String id)throws Exception
	{
		stat = con.prepareStatement("select  areacode,mrcode from consumer where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		stat.setString(1,id);
		ResultSet rs = stat.executeQuery();
		Vector v7 = new Vector();
		if(rs.next())
		{
			
			v7.addElement(rs.getString(1));
			v7.addElement(rs.getString(2));
			
		}
		return v7;
	}

	public String getCdDetails(String id)throws Exception
	{
		String s=null;
		stat = con.prepareStatement("select adldeposit from depositdetails where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
		stat.setString(1,id);
		ResultSet rs = stat.executeQuery();
		if(rs.next())
		  s=rs.getString(1);
		return s;
	}

	public String getCldetails(String id) throws Exception
	{
	String s=null;
	stat=con.prepareStatement("select connectedload from consumer where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	stat.setString(1,id);
	ResultSet rs = stat.executeQuery();
	if(rs.next())
		  s=rs.getString(1);
		return s;
}
public String getInitialReading(String id) throws Exception
{
	String s=null;
	stat=con.prepareStatement("select initialreading from meterdetails where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	stat.setString(1,id);
	ResultSet rs = stat.executeQuery();
	if(rs.next())
		  s=rs.getString(1);
		return s;
}

public String getTariff(String id) throws Exception
{
	String s=null;
	stat=con.prepareStatement("select tariff from consumer where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	stat.setString(1,id);
	ResultSet rs = stat.executeQuery();
	if(rs.next())
		  s=rs.getString(1);
		return s;
}


		public Vector getDmdwithdraw(String id)throws Exception
	{

		stat = con.prepareStatement("select  demandid,unitconsumed,netamt from demand where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	
		stat.setString(1,id);
		
		ResultSet rs = stat.executeQuery();
		
		Vector v8 = new Vector();
		if(rs.next())
		 {
		 v8.addElement(rs.getString(1));
		 v8.addElement(rs.getString(2));
		 v8.addElement(rs.getString(3));
		 
		 
		 System.out.println(v8);	
		 }
		return v8;
}
		
	public Vector getCd(String id)throws Exception
	{

		stat = con.prepareStatement("select  deposit from depositdetails where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	
		stat.setString(1,id);
		
		ResultSet rs = stat.executeQuery();
		
		Vector v9 = new Vector();
		if(rs.next())
		 {
		 v9.addElement(rs.getString(1));
		 
		 
		 System.out.println(v9);	
		 }
		 
		 
		return v9;
		}
		public Vector getCdadjt(String id)throws Exception
		{

		stat = con.prepareStatement("select  netamt from demand where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	
		stat.setString(1,id);
		
		ResultSet rs = stat.executeQuery();
		
		Vector v10 = new Vector();
		if(rs.next())
		 {
		 v10.addElement(rs.getString(1));
		 
		 
		 System.out.println(v10);	
		 }
		 
		 
		return v10;
		}
		
				public Vector getDmdwiew(String id)throws Exception
	{

	stat = con.prepareStatement("select areacode,mrcode,previousreading,presentreading,unitconsumed,demandid,fixedcharge,energycharge,duty,mtrrent,reconfee,demand,subsidy,advancepaid,previousarrears,total,intrestoncd,netamt,bd,dd,disd from demand where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	//stat = con.prepareStatement("select  * from demand where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	
		stat.setString(1,id);
		
		ResultSet rs = stat.executeQuery();
		
		Vector v11 = new Vector();
		if(rs.next())
		 {
		 v11.addElement(rs.getString(1));
		 v11.addElement(rs.getString(2));
		 v11.addElement(rs.getString(3));
		 v11.addElement(rs.getString(4));
		 v11.addElement(rs.getString(5));
		 v11.addElement(rs.getString(6));
		 v11.addElement(rs.getString(7));
		 v11.addElement(rs.getString(8));
		 v11.addElement(rs.getString(9));
		 v11.addElement(rs.getString(10));
		 v11.addElement(rs.getString(11));
		 v11.addElement(rs.getString(12));
		 v11.addElement(rs.getString(13));
		 v11.addElement(rs.getString(14));
		 v11.addElement(rs.getString(15));
		 v11.addElement(rs.getString(16));
		 v11.addElement(rs.getString(17));
		 v11.addElement(rs.getString(18));
		 v11.addElement(rs.getString(19));
		 v11.addElement(rs.getString(20));
		 v11.addElement(rs.getString(21));
		 
		 
		 System.out.println(v11);	
		 }
		return v11;
	}
		
	public Vector getTid(String id)throws Exception
	{

	stat = con.prepareStatement("select tariffid from consumer where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	//stat = con.prepareStatement("select  * from demand where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	
		stat.setString(1,id);
		
		ResultSet rs = stat.executeQuery();
		
		Vector v12 = new Vector();
		if(rs.next())
		 {
		 v12.addElement(rs.getString(1));
		 
		  System.out.println(v12);	
		 }
		return v12;
	}
	
	
				public Vector getOyecdues(String id)throws Exception
	{

	stat = con.prepareStatement("select balnceinstalments  from depositdetails where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	//stat = con.prepareStatement("select  * from demand where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	
		stat.setString(1,id);
		
		ResultSet rs = stat.executeQuery();
		
		Vector v13 = new Vector();
		if(rs.next())
		 {
		 v13.addElement(rs.getString(1));
		 
		 
		 System.out.println(v13);	
		 }
		return v13;
	}
		
	
				public Vector getNetdem(String id)throws Exception
	{
	
		stat = con.prepareStatement("select netamt  from demand where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	//stat = con.prepareStatement("select  * from demand where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	
		stat.setString(1,id);
		
		ResultSet rs = stat.executeQuery();
		
		Vector v14 = new Vector();
		if(rs.next())
		 {
		 v14.addElement(rs.getString(1));
		 
		 
		 System.out.println(v14);	
		 }
		return v14;
	}


public String getPhase(String id) throws Exception
{
	String s=null;
	stat=con.prepareStatement("select phase from consumer where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	stat.setString(1,id);
	ResultSet rs = stat.executeQuery();
	if(rs.next())
		  s=rs.getString(1);
		return s;
}

public String getCl(String id) throws Exception
{
	String s=null;
	stat=con.prepareStatement("select connectedload from consumer where conno=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
	stat.setString(1,id);
	ResultSet rs = stat.executeQuery();
	if(rs.next())
		  s=rs.getString(1);
		return s;
}
}

//Billdetails.java
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.border.*;
import java.util.*;
public class Billdetails extends JInternalFrame implements ActionListener
 { 
	JLabel conno,areacode,prereading,presentreading,mtrcode,unitcon ;
	
	JTextField ad_v,dem_id,area_code,mtr_code,d1,d2,d3,m1,m2,m3,y1,y2,y3,dty,cash,bcash,net_amt,cdint,tot,arrear,dem,sub,f_c,e_c,m_r,pre_reading,present_reading,ints,unit_con,day_code,r_f,s_c;
	JComboBox con_no;
	JButton qry,dd,mrd,exit;
		String dw[]={"Date","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"};
	String mw[]={"Month","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"};

	String yw[]={"Year","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020"};
	String ac[]={"A01","A02","A03","A04","A05","A06","A07","A08","A09","A10","A11","A12","A13","A14","A15","A16","A17","A18","A19","A20","A21","A22","A23","A24","A25","B01","B02","B03","B04","B05","B06","B07","B08","B09","B10","B11","B12","B13","B14","B15","B16","B17","B18","B19","B20","B21","B22","B23","B24","B25"};
	String mc[]={"1","2","3","4","5","6","7","8"};
	Connection con ;
	public 	Billdetails(String title)
  	{


		super("BILL DETAILS");
		setLayout(null);
		conno=new JLabel("Consumer Number");
                                       try{
		QueryData qd = new QueryData();
		Vector v = qd.getConsumer(); 
		con_no=new JComboBox(v);
		}catch(Exception ex){System.out.println("Error in DataEnt " + ex);}
		
		con_no.setPreferredSize(new Dimension(100,20));
		areacode=new JLabel("Area code");
		area_code=new JTextField();
	
		mtrcode=new JLabel("Meter Reader Code");
		//String mtrcd[]={"1","2","3","4","5","6","7","8"};
		mtr_code=new  JTextField();
		prereading=new JLabel("Previous Reading");
		pre_reading=new JTextField(10); //read from the database
		presentreading=new JLabel("Present Reading");
		present_reading=new JTextField(10);
		unitcon=new JLabel("Units consumed");
		unit_con=new JTextField(10);
		JLabel demid= new JLabel("Demand ID");
		dem_id=new JTextField(10);
		
		//qry=new JButton("Quierry");
		//ok=new JButton("Update");
		//cancel=new JButton("Cancel");
		//edit=new JButton("edit");
		FlowLayout layout=new FlowLayout();
		dd=new JButton("Show Demand details");
		
		mrd=new JButton("Meter Reading details");

		exit=new JButton("exit");


		JPanel p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14;

		p1=new JPanel();
		p1.setLayout(new GridLayout(9,2,0,5));

		p1.add(conno);
		p1.add(con_no);
		p1.add(areacode);
		p1.add(area_code);		
		p1.add(mtrcode);
		p1.add(mtr_code);
		
		p1.add(prereading);
		p1.add(pre_reading); 
		p1.add(presentreading);
		p1.add(present_reading);
		p1.add(unitcon);
		p1.add(unit_con);
		p1.add(demid);
		p1.add(dem_id);
		p1.setBounds(10,100,250,196);
		add(p1);
		con_no.setEditable(false);
	   	 area_code.setEditable(false);
	   	 mtr_code.setEditable(false);
	   	 pre_reading.setEditable(false);
	   	 present_reading.setEditable(false);
	   	 unit_con.setEditable(false);
	   	 dem_id.setEditable(false);


		/*p2=new JPanel();
		p2.setLayout(new FlowLayout());
		p2.add(qry);
		p2.setBounds(262,163,90,40);
		add(p2);*/
		
		JLabel c=new JLabel("BILL DETAILS");
		c.setFont(new Font("Times New Roman",Font.BOLD,30));
		c.setForeground(new Color(200,0,20));      
		
		        p6=new JPanel();
				p6.setLayout(new FlowLayout());
     			p6.setBounds(250,30,350,50);
     			p6.add(c);
     			add(p6);
     			//panel1.add(p65);
			
		
		p5=new JPanel();
		p5.setLayout(new GridLayout(1,1,10,10));
	//	p5.add(dd);
	//	p5.add(mrd);
		p5.add(exit);
		
		
		
		p5.setBounds(400,425,80,30);
		add(p5);
	
		JLabel fc=new JLabel("Fixed Charge");
		f_c=new JTextField(10);
		JLabel ec=new JLabel("Energy Charge");
		e_c=new JTextField(10);
		JLabel mr=new JLabel("Meter Rent");
		m_r=new JTextField(10);
		
		JLabel duty=new JLabel("DUTY TO GOVT:");
		dty=new JTextField(10);
		
		JLabel rf=new JLabel("Re con: fee");
		r_f=new JTextField(10);
		JLabel sc=new JLabel("Surcharge");
		s_c=new JTextField(10);
		JLabel demd=new JLabel("Demand for  ..... ");
		dem=new JTextField(10);
		
		JLabel subsi=new JLabel("Subsidy");
		sub=new JTextField(10);
		
		JLabel adv=new JLabel("Advance Paid");
		ad_v=new JTextField(10);
		
		JLabel prebal=new JLabel("Previous arrears");
		arrear=new JTextField(10);
		
		JLabel total=new JLabel("Total");
		tot=new JTextField(10);	
		JLabel intcd=new JLabel("Intrest on CD");
		cdint=new JTextField(10);
		JLabel netamt=new JLabel("NET AMOUNT PAYABLE");
		net_amt=new JTextField(10);	
		
		p7=new JPanel();
		p7.setLayout(new GridLayout(12,2,0,7));
		p7.add(fc);
		p7.add(f_c);
		p7.add(ec);
		p7.add(e_c);
		
		f_c.setEditable(false);
	   	 e_c.setEditable(false);
	   	 dty.setEditable(false);

		
		p7.add(duty);
		p7.add(dty);
		
		
		p7.add(mr);
		p7.add(m_r);
		p7.add(rf);
		p7.add(r_f);
		
		p7.add(demd);
		p7.add(dem);
		p7.add(subsi);
		p7.add(sub);
		
		
		m_r.setEditable(false);
	   	 r_f.setEditable(false);
	   	 dem.setEditable(false);
	   	 sub.setEditable(false);


		//p7.add(demd);
		//p7.add(dem);
		
		p7.add(adv);
		p7.add(ad_v);
		
		
		p7.add(prebal);
		p7.add(arrear);
		
		p7.add(total);
		p7.add(tot);
		p7.add(intcd);
		p7.add(cdint);
		p7.add(netamt);
		p7.add(net_amt);
		 ad_v.setEditable(false);
	   	 arrear.setEditable(false);
		 tot.setEditable(false);
	   	 cdint.setEditable(false);
	   	 dem.setEditable(false);
	   	 net_amt.setEditable(false);

		
		p7.setBounds(352,100,270,260);
		add(p7);
		
		JLabel bdate=new JLabel("Bill Date");
		d1=new JTextField(10);
		//m1=new JTextField(5);
		//y1=new JTextField(5);
		JLabel ddate=new JLabel("Due Date");
		d2=new JTextField(10);
		//m2=new JTextField(5);
		//y2=new JTextField(5);
		JLabel disdate=new JLabel("Disconnnection date");
		d3=new JTextField(10);
		//m3=new JTextField(5);
		//y3=new JTextField(5);
		
		p8=new JPanel();
		p8.setLayout(new GridLayout(1,1,10,10));
		p8.add(bdate);
		p8.setBounds(650,100,120,20);
		add(p8);
		
		p9=new JPanel();
		p9.setLayout(new GridLayout(1,1,0,10));
		p9.add(d1);
		//p9.add(m1);
	    //p9.add(y1);
		p9.setBounds(650,120,150,20);
		add(p9);
	
		
		p10=new JPanel();
		p10.setLayout(new GridLayout(1,1,10,10));
		p10.add(ddate);
		p10.setBounds(650,140,120,20);
		add(p10);
		
		p11=new JPanel();
		p11.setLayout(new GridLayout(1,1,0,10));
		p11.add(d2);
		//p11.add(m2);
	    //p11.add(y2);
		p11.setBounds(650,160,150,20);
		add(p11);
		
		p12=new JPanel();
		p12.setLayout(new GridLayout(1,1,10,10));
		p12.add(disdate);
		p12.setBounds(650,180,120,20);
		add(p12);
		
		p13=new JPanel();
		p13.setLayout(new GridLayout(1,1,0,10));
		p13.add(d3);
		//p13.add(m3);
	   // p13.add(y3);
		p13.setBounds(650,200,150,20);
		add(p13);
	
		 d1.setEditable(false);
	   	 d2.setEditable(false);
	   	 d3.setEditable(false);

	setLocation(50,70);
	
JLabel amtpaid=new JLabel("Cash paid");
cash=new JTextField(10);
JLabel balamt=new JLabel("Balance adjustable ");
bcash=new JTextField(10);
//JLabel duty=new JLabel("DUTY TO GOVT:");
//dty=new JTextField(10);
p14=new JPanel();
p14.setLayout(new GridLayout(6,1,0,5));
//p14.add(duty);
//p14.add(dty);
p14.add(amtpaid);
p14.add(cash);
p14.add(balamt);
p14.add(bcash);

		 cash.setEditable(false);
	   	 bcash.setEditable(false);

p14.setBounds(650,225,120,130);
		add(p14);
exit.addActionListener(this);
con_no.addActionListener(this);			
					}
		
                               public void actionPerformed(ActionEvent e)
		{
			if(e.getSource()==exit)
			{
				this.dispose();
			}if(e.getSource()==con_no)
			{
				//System.out.println("Selecte d ocnsumer NO");
				try{

					
					QueryData qd = new QueryData();

					String id=(String)con_no.getSelectedItem();
					/*Vector v = qd.getBillDetails(id.trim()); 
					//System.out.println("Consumer Details  " + v);
					System.out.println(id + "Bill Details " + v );
					Enumeration em=v.elements();
					area_code.setText((String)em.nextElement());
					//System.out.println((String)em.nextElement());
					mtr_code.setText((String)em.nextElement());
					
				
					String cl=qd.getInitialReading(id);
					if(cl!=null)
						pre_reading.setText(cl);*/
					
					Vector v11 = qd.getDmdwiew(id.trim()); 
					//System.out.println("Consumer Details  " + v);
					System.out.println(id + "Bill  " + v11 );
					Enumeration em=v11.elements();
					
					area_code.setText((String)em.nextElement());
					mtr_code.setText((String)em.nextElement());
					pre_reading.setText((String)em.nextElement());
					present_reading.setText((String)em.nextElement());
					unit_con.setText((String)em.nextElement());
					dem_id.setText((String)em.nextElement());
					f_c.setText((String)em.nextElement());
					e_c.setText((String)em.nextElement());
					dty.setText((String)em.nextElement());
					m_r.setText((String)em.nextElement());
					r_f.setText((String)em.nextElement());
					dem.setText((String)em.nextElement());
					sub.setText((String)em.nextElement());
					ad_v.setText((String)em.nextElement());
					arrear.setText((String)em.nextElement());
					tot.setText((String)em.nextElement());
					cdint.setText((String)em.nextElement());
					net_amt.setText((String)em.nextElement());
					d1.setText((String)em.nextElement());
					d2.setText((String)em.nextElement());
					d3.setText((String)em.nextElement());			
					}catch(Exception ex){System.out.println("Error in Bill Details " + ex);}
			}	
	
	}

		public static void main(String arg[])
		{
		Billdetails bd = new Billdetails("BILL DETAILS");
			bd.setSize(900,550);
			bd.setVisible(true);
	}

}
